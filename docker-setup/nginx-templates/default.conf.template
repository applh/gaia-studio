# app2.test
server {
    listen 80 default_server;
    index index.php;
    server_name _;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    # static files mount for each server
    # root /var/www/html-php/public;
    root /usr/share/nginx/html;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        # try_files $uri @fpmnode;

        add_header X-cgiscript 42 always;

        # https://www.nginx.com/resources/wiki/start/topics/examples/fastcgiexample/
        include fastcgi_params;
        fastcgi_intercept_errors on;

        # FIXME: inspect and debug PHP code 
        # fastcgi_param SCRIPT_FILENAME /app/php-router/index.php;
        # so simple ?!
        fastcgi_param SCRIPT_FILENAME /app/php/index.php;

        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SERVER_NAME $host;

        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_read_timeout 10m;

        fastcgi_index index.php;
        fastcgi_pass appcron:9000;

    }

    #location ~ \.php$ {
    location @fpmnode {

        # try_files $uri;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # WARNING: use docker-compose service name here (and not localhost)
        fastcgi_pass appcron:9000;
        fastcgi_index index.php;

        include fastcgi_params;
        fastcgi_intercept_errors on;
        
        # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # hack: only one file is always used, so we can hardcode it
        fastcgi_param SCRIPT_FILENAME /app/php-router/index.php;

        fastcgi_param PATH_INFO $fastcgi_path_info;

        # from ddev nginx config
        fastcgi_param SERVER_NAME $host;
        #fastcgi_param HTTPS $fcgi_https;

        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_read_timeout 10m;
    }

}